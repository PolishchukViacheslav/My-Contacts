{"version":3,"sources":["icons/icons.js","features/reduxSlices/userSlice.js","components/contacts/contacts_header/HeaderNavigation.js","features/reduxSlices/loginPopupSlice.js","components/login/LoginFormFooter.js","components/login/EmailField.js","components/login/PasswordField.js","features/inputFieldsValidation.js","components/login/LoginForm.js","components/login/LoginPopup.js","components/login/SignIn.js","features/API/config.js","features/iso2NatMap.js","features/reduxSlices/contactsSlice.js","features/reduxSlices/contactsPageConfigSlice.js","features/reduxSlices/filterSlice.js","features/reduxSlices/paginationSlice.js","components/header/user_dashboard/Dropdown.js","components/header/user_dashboard/UserDashboard.js","components/header/Header.js","app/store.js","features/functions.js","components/contacts/contacts_header/ContactsHeader.js","components/contacts/contact_search-bar/filters/FilterByGender.js","components/contacts/contact_search-bar/filters/FilterByName.js","components/contacts/contact_search-bar/filters/FilterByNationality.js","components/contacts/contact_search-bar/ContactsSearchBar.js","components/contacts/contacts_body/Plates/ContactPlate.js","components/contacts/contacts_body/Plates/ContactsPlates.js","components/contacts/contacts_body/Table/Row.js","components/contacts/contacts_body/Table/ContactsTable.js","components/contacts/statistic/Statistic.js","components/Pagination.js","components/contacts/Contacts.js","components/Home.js","components/404Page/NotFound.js","components/contacts/Loading.js","components/Profile.js","components/Page.js","App.js","serviceWorker.js","index.js"],"names":["signInIcon","viewBox","focusable","className","data-icon","width","height","fill","aria-hidden","d","mainLogoIcon","userIcon","lockIcon","arrowIcon","logOutIcon","reactIcon","xmlns","cx","cy","r","refreshIcon","platesViewIcon","tabularViewIcon","hiddenInputFieldIcon","visibleInputFieldIcon","arrowUp","arrowDown","getUser","createAsyncThunk","endpoint","a","fetch","fetchPromise","json","results","isUser","localStorage","hasOwnProperty","userSlice","createSlice","name","initialState","info","isLoading","reducers","setUser","state","action","payload","setIsUser","extraReducers","fulfilled","pending","rejected","actions","selectUser","user","selectIsUser","selectIsLoading","HeaderNavigation","useSelector","to","activeClassName","isActive","url","params","loginPopupSlice","value","setVisibility","selectPopupVisibility","loginPopup","LoginFormFooter","dispatch","useDispatch","type","onClick","role","aria-label","EmailField","input","meta","touched","error","active","htmlFor","placeholder","autoComplete","PasswordField","useState","fieldType","setFieldType","isPasswordVisibleIcon","setIsPasswordVisibleIcon","emailPatternRFC5322","minLength","min","length","undefined","passwordValidationPattern","password","isInValidMatches","match","minLength5","minLength8","required","email","test","LoginForm","props","handleSubmit","onSubmit","Field","component","validate","reduxForm","form","LoginPopup","isVisible","history","useHistory","event","push","SignIn","isPopupVisible","URL","natMap","AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","getContacts","statistic","collectionSize","males","females","indeterminate","predominate","nationalities","forEach","gender","nat","setDefaultValue","setInitialStat","contactsSlice","defaultValue","initialStat","setContacts","selectContacts","contacts","selectInitialStat","contactsPageConfigSlice","stringifyMode","setStringifyMode","selectStringifyMode","contactsPageConfig","filterSlice","preparedContacts","activeName","activeNat","activeGender","isContactsWereUpdated","sortType","setDefaultFilteredContacts","setActiveNat","setActiveGender","setActiveName","setIsContactsWereUpdated","setSortType","setStatistic","selectPreparedContacts","filters","selectActiveNat","selectActiveName","selectActiveGender","selectSortType","selectStatistic","paginationSlice","prepContSlice","perPage","pagesCount","setPrepContSlice","setPerPage","setPagesCount","selectPrepContSlice","pagination","selectPerPage","selectPagesCount","Dropdown","hideAwaySelf","handleClick","innerText","target","preventDefault","toLowerCase","clear","batch","UserDashboard","isDropdownShown","setIsDropdownShown","setDropdownHidden","useEffect","setItem","JSON","stringify","parse","getItem","onMouseEnter","onMouseLeave","title","first","last","src","picture","large","alt","Header","isLogged","configureStore","reducer","contactsReducer","loginPopupReducer","userReducer","contactsPageReducer","filtersReducer","paginationReducer","formFReducer","getPieceOfData","array","string","uniqKeys","item","Object","keys","pagesCounter","store","getState","Math","ceil","contactsPreparator","nationality","contactsPerPage","slice","filter","contactNat","contactGender","dirtyName","isNatEqual","isGenderEqual","isEqual","console","log","isNameContains","values","join","includes","start","end","startIndex","endIndex","createPrepContactSlice","ContactsHeader","contactsFromServer","FilterByGender","initialValue","setValue","initialContacts","genders","onChange","reduxValue","stateValue","filteredContacts","map","key","toUpperCase","FilterByName","initialContact","inputValue","setInputValue","timer","setTimeout","reduxValueName","setPreparedContacts","clearTimeout","FilterByNationality","reduxValueNat","stateValueNat","ContactsSearchBar","initStat","ContactPlate","contact","login","uuid","dob","age","href","phone","location","country","postcode","street","number","ContactsPlates","Row","date","Date","preparedDate","Intl","DateTimeFormat","weekday","year","month","day","hour","minute","second","format","ContactsTable","contactsForSort","activeSortType","scope","sortedContacts","nextSortType","initContacts","collator","Collator","sensitivity","sort","nameA","nameB","titleA","firstA","lastA","titleB","firstB","lastB","fullNameA","fullNameB","compare","sorter","Statistic","i","useStyles","makeStyles","theme","root","marginTop","spacing","PaginationRounded","classes","pages","Pagination","count","shape","page","Contacts","isLocalViewMode","reduxViewMode","isStringMode","Home","NotFound","Loading","Profile","isContact","contactId","find","Page","exact","path","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce8cfef5.chunk.js","sourcesContent":["import React from 'react';\n\nexport const signInIcon = <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"login\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\">\n  <path d=\"M521.7 82c-152.5-.4-286.7 78.5-363.4 197.7-3.4 5.3.4 12.3 6.7 12.3h70.3c4.8 0 9.3-2.1 12.3-5.8 7-8.5 14.5-16.7 22.4-24.5 32.6-32.5 70.5-58.1 112.7-75.9 43.6-18.4 90-27.8 137.9-27.8 47.9 0 94.3 9.3 137.9 27.8 42.2 17.8 80.1 43.4 112.7 75.9 32.6 32.5 58.1 70.4 76 112.5C865.7 417.8 875 464.1 875 512c0 47.9-9.4 94.2-27.8 137.8-17.8 42.1-43.4 80-76 112.5s-70.5 58.1-112.7 75.9A352.8 352.8 0 01520.6 866c-47.9 0-94.3-9.4-137.9-27.8A353.84 353.84 0 01270 762.3c-7.9-7.9-15.3-16.1-22.4-24.5-3-3.7-7.6-5.8-12.3-5.8H165c-6.3 0-10.2 7-6.7 12.3C234.9 863.2 368.5 942 520.6 942c236.2 0 428-190.1 430.4-425.6C953.4 277.1 761.3 82.6 521.7 82zM395.02 624v-76h-314c-4.4 0-8-3.6-8-8v-56c0-4.4 3.6-8 8-8h314v-76c0-6.7 7.8-10.5 13-6.3l141.9 112a8 8 0 010 12.6l-141.9 112c-5.2 4.1-13 .4-13-6.3z\"></path>\n</svg>;\n\nexport const mainLogoIcon = <svg viewBox=\"0 0 57 21\" width=\"57\" height=\"21\">\n<path d=\"M31.2,1.1C30.5,0.4,29.5,0,28.5,0c-1,0-2,0.4-2.7,1.2l-9.6,10.2L6.5,1.1C5-0.4,2.6-0.4,1.1,1.1c-1.5,1.6-1.5,4.1,0,5.6\nl12.3,13c0.7,0.8,1.7,1.2,2.7,1.2c1,0,1.9-0.4,2.7-1.2l9.6-10.2l9.6,10.2c0.7,0.8,1.7,1.2,2.7,1.2c1,0,1.9-0.4,2.7-1.2l12.3-13\nc1.5-1.6,1.5-4.1,0-5.6c-1.5-1.6-3.9-1.6-5.4,0l-9.7,10.2L31.2,1.1z\"/>\n</svg>;\n\nexport const userIcon = <svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"user\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\"></path></svg>;\n\nexport const lockIcon = <svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"lock\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\"></path></svg>;\n\nexport const arrowIcon = <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"down\" width=\"16\" height=\"16\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z\"></path></svg>;\n\nexport const logOutIcon = <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"logout\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M868 732h-70.3c-4.8 0-9.3 2.1-12.3 5.8-7 8.5-14.5 16.7-22.4 24.5a353.84 353.84 0 01-112.7 75.9A352.8 352.8 0 01512.4 866c-47.9 0-94.3-9.4-137.9-27.8a353.84 353.84 0 01-112.7-75.9 353.28 353.28 0 01-76-112.5C167.3 606.2 158 559.9 158 512s9.4-94.2 27.8-137.8c17.8-42.1 43.4-80 76-112.5s70.5-58.1 112.7-75.9c43.6-18.4 90-27.8 137.9-27.8 47.9 0 94.3 9.3 137.9 27.8 42.2 17.8 80.1 43.4 112.7 75.9 7.9 7.9 15.3 16.1 22.4 24.5 3 3.7 7.6 5.8 12.3 5.8H868c6.3 0 10.2-7 6.7-12.3C798 160.5 663.8 81.6 511.3 82 271.7 82.6 79.6 277.1 82 516.4 84.4 751.9 276.2 942 512.4 942c152.1 0 285.7-78.8 362.3-197.7 3.4-5.3-.4-12.3-6.7-12.3zm88.9-226.3L815 393.7c-5.3-4.2-13-.4-13 6.3v76H488c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h314v76c0 6.7 7.8 10.5 13 6.3l141.9-112a8 8 0 000-12.6z\"></path></svg>;\n\nexport const reactIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\">\n<g fill=\"#61DAFB\">\n    <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/>\n    <circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/>\n    <path d=\"M520.5 78.1z\"/>\n</g>\n</svg>;\n\nexport const refreshIcon = <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"reload\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z\"></path></svg>;\n\nexport const platesViewIcon = <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"appstore\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M464 144H160c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V160c0-8.8-7.2-16-16-16zm-52 268H212V212h200v200zm452-268H560c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V160c0-8.8-7.2-16-16-16zm-52 268H612V212h200v200zM464 544H160c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V560c0-8.8-7.2-16-16-16zm-52 268H212V612h200v200zm452-268H560c-8.8 0-16 7.2-16 16v304c0 8.8 7.2 16 16 16h304c8.8 0 16-7.2 16-16V560c0-8.8-7.2-16-16-16zm-52 268H612V612h200v200z\"></path></svg>;\n\nexport const tabularViewIcon = <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"unordered-list\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M912 192H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM104 228a56 56 0 10112 0 56 56 0 10-112 0zm0 284a56 56 0 10112 0 56 56 0 10-112 0zm0 284a56 56 0 10112 0 56 56 0 10-112 0z\"></path></svg>;\n\nexport const hiddenInputFieldIcon = <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"eye-invisible\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 000-51.5zm-63.57-320.64L836 122.88a8 8 0 00-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 000 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 000 11.31L155.17 889a8 8 0 0011.31 0l712.15-712.12a8 8 0 000-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 00-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 01146.2-106.69L401.31 546.2A112 112 0 01396 512z\"></path><path d=\"M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 00227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 01-112 112z\"></path></svg>;\n\nexport const visibleInputFieldIcon = <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"eye\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\"></path></svg>;\n\nexport const arrowUp = <svg viewBox=\"0 0 1024 1024\" focusable=\"false\" className=\"\" data-icon=\"caret-up\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z\"></path></svg>;\n\nexport const arrowDown = <svg viewBox=\"0 0 1024 1024\" focusable=\"false\" className=\"\" data-icon=\"caret-down\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z\"></path></svg>;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const getUser = createAsyncThunk('user/getUser', async (endpoint) => {\n  const fetchPromise = await fetch(endpoint);\n  const { results } = await fetchPromise.json();\n  return results;\n  } \n);\n\nconst isUser = localStorage.hasOwnProperty('user');\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    isUser,\n    info: null,\n    isLoading: false,\n  },\n  reducers: {\n    setUser: (state, action) => {\n      return {...state,\n      info: action.payload,\n      }\n    },\n    setIsUser: (state, action) => {\n      return {\n        ...state,\n        isUser: action.payload,\n        isLoading: false,\n      }\n    }\n  },\n  extraReducers: {\n    [getUser.fulfilled]: (state, action) => {\n      return {\n        ...state,\n        info: action.payload[0],\n        isLoading: false,\n      }\n    },\n    [getUser.pending]: (state) => {\n      state.isLoading = true;\n    },\n    [getUser.rejected]: (state) => {\n      state.isLoading = false;\n    },\n  }\n});\n\nexport const { setUser, setIsUser } = userSlice.actions;\n\n\n\nexport const selectUser = state => state.user.info;\nexport const selectIsUser = state => state.user.isUser;\nexport const selectIsLoading = state => state.user.isLoading;\nexport default userSlice.reducer;","import React from 'react';\nimport './HeaderNavigation.css';\nimport { useSelector } from 'react-redux';\nimport { selectIsUser } from '../../../features/reduxSlices/userSlice';\nimport { NavLink } from 'react-router-dom';\n\nfunction HeaderNavigation() {\n  const isUser = useSelector(selectIsUser);\n\n\n  return (\n    <nav className=\"header__navigation nav\">\n      <ul className=\"nav__list\">\n        <li className=\"nav__item\">\n          <NavLink \n            to=\"/\"\n            className=\"nav__link\"\n            activeClassName=\"nav__link--active\"\n            isActive={({ url }) => {\n              return url === '/' ? true : false\n            }}\n          >\n            Home\n          </NavLink>\n        </li>\n        {isUser && \n          <li className=\"nav__item\">\n            <NavLink \n            to=\"/contacts\"\n            className=\"nav__link\"\n            activeClassName=\"nav__link--active\"\n            isActive={(params) => {\n              return params?.url === '/contacts' ? true : false\n            }}\n            >\n              Contacts\n            </NavLink>\n          </li>\n        }\n      </ul>\n    </nav>\n  )\n};\n\nexport default HeaderNavigation;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const loginPopupSlice = createSlice({\n  name: 'loginPopup',\n  initialState: {\n    value: false,\n  },\n  reducers: {\n    setVisibility: (state, action) => {\n      state.value = action.payload\n    },\n  },\n});\n\nexport const { setVisibility } = loginPopupSlice.actions;\n\n\n\nexport const selectPopupVisibility = state => state.loginPopup.value;\nexport default loginPopupSlice.reducer;","import React from 'react'\nimport './LoginFormFooter.css';\nimport { useDispatch } from 'react-redux';\nimport { setVisibility } from '../../features/reduxSlices/loginPopupSlice';\n\nexport const LoginFormFooter = () => {\n  const dispatch = useDispatch();\n  const handlePopupHide = () => {\n    dispatch(setVisibility(false))\n  };\n\n  return (\n    <div className=\"login-form__footer footer\">\n      <div type=\"flex\" className=\"footer__wrapper\">\n        <div className=\"footer__submit\">\n          <button type=\"submit\" className=\"footer__submit-button\">\n            <span>Sign In</span>\n          </button>\n        </div>\n        <div className=\"footer__cancel\">\n          <button type=\"button\" className=\"footer__cancel-button\" onClick={handlePopupHide}>\n            <span role=\"img\" aria-label=\"close\" className=\"footer__cancel-image\">\n              <svg viewBox=\"64 64 896 896\" focusable=\"false\" className=\"\" data-icon=\"close\" width=\"1em\" height=\"1em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\"></path></svg>\n            </span>\n            <span>Cancel</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginFormFooter;\n","import React from 'react';\nimport { userIcon } from '../../icons/icons';\n\nexport const EmailField = ({ input, meta: { touched, error, active } }) => {\n    return (<>\n      <div className=\"login-form__input-wrapper\">\n        <span role=\"img\" aria-label=\"user\" className=\"\">{userIcon}</span>\n        <label htmlFor=\"email\">\n          <input {...input} name=\"email\" placeholder=\"Email\" className=\"login-form__input\" autoComplete=\"username\"/>\n        </label>\n      </div>\n      {(!touched || active  || !error) && <div className=\"login-form__input-instructions\">Type Email here</div>}\n      {(touched && !active) && ((error && <div className=\"login-form__input-instructions--error\">{error}</div>))}\n    </>)\n};\n","import React, { useState } from 'react';\nimport { hiddenInputFieldIcon, lockIcon, visibleInputFieldIcon } from '../../icons/icons';\n\nexport const PasswordField = ({ input, meta: { touched, error, active } }) => {\n  const [ fieldType, setFieldType ] = useState('password');\n  const [isPasswordVisibleIcon, setIsPasswordVisibleIcon] = useState(visibleInputFieldIcon);\n\n  const handlePasswordVisibility = () => {\n    if (fieldType === 'password') {\n    setFieldType('text');\n    setIsPasswordVisibleIcon(hiddenInputFieldIcon);\n    } else {\n    setFieldType('password');\n    setIsPasswordVisibleIcon(visibleInputFieldIcon);\n    }\n  };\n    return (<>\n      <div className=\"login-form__input-wrapper\">\n        <span role=\"img\" aria-label=\"lock\" className=\"\">{lockIcon}</span>\n        <label htmlFor=\"password\">\n          <input {...input} type={`${fieldType}`} name=\"password\" placeholder=\"Password\" className=\"login-form__input\" autoComplete=\"current-password\"/>\n        </label>\n        <span role=\"img\" aria-label=\"hidden-password\" className=\"login-form__password\" onClick={handlePasswordVisibility}>{isPasswordVisibleIcon}</span>\n      </div>\n      {(!touched || active  || !error) && <div className=\"login-form__input-instructions\">Type valid Password min 8</div>}\n      {(touched && !active) && ((error && <div className=\"login-form__input-instructions--error\">{error}</div>))}\n    </>)\n};","// eslint-disable-next-line no-control-regex\nconst emailPatternRFC5322 = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/i;\nconst minLength = min => value => (\n  value && value.length < min \n  ? \n  `Must be at least ${min}`\n  :\n  undefined\n  );\n\nconst passwordValidationPattern = /[^A-Za-z0-9.\\-_]+/;\nexport const password = value => {\n  const isInValidMatches = value.match(passwordValidationPattern);\n\n  if (value && !isInValidMatches === true) {\n    return undefined;\n  } else {\n    return 'Latin characters, numbers and symbols \" ._- \" are allowed'\n  }\n}; \n\nexport const minLength5 = minLength(5);\nexport const minLength8 = minLength(8);\nexport const required = value => value ? undefined : 'Required';\nexport const email = value =>\n  value && !emailPatternRFC5322.test(value) ?\n  'Invalid email address' : undefined;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport './LoginForm.css'\nimport LoginFormFooter from './LoginFormFooter';\nimport { EmailField } from './EmailField';\nimport { PasswordField } from './PasswordField';\nimport { email, minLength5, minLength8, password, required } from '../../features/inputFieldsValidation';\n\nlet LoginForm = (props) => {\n  const { handleSubmit } = props;\n\n  return (\n    <form onSubmit={handleSubmit} className=\"login-form\">\n      <Field type=\"text\"\n        name=\"email\"\n        component={EmailField}\n        validate={[ minLength5, required, email ]}\n      />\n      <Field \n        name=\"password\"\n        component={PasswordField}\n        validate={[ minLength8, required, password ]}\n        />\n      <LoginFormFooter />\n    </form>\n  )\n}\n\nLoginForm = reduxForm({\n  form: 'loginForm'\n})(LoginForm);\n\nexport default LoginForm;","import React from 'react';\nimport LoginForm from './LoginForm';\nimport './LoginPopup.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectPopupVisibility, setVisibility } from '../../features/reduxSlices/loginPopupSlice';\nimport { setIsUser } from '../../features/reduxSlices/userSlice';\nimport { useHistory } from 'react-router-dom';\n\nconst LoginPopup = () => {\n  const isVisible = useSelector(selectPopupVisibility);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    dispatch(setIsUser(true));\n    dispatch(setVisibility(false));\n    history.push('/profile')\n  };\n\n  return (\n    <div className={`login__popup${isVisible ? '' : '--hidden'}`}>\n      <div className=\"login__popup-wrapper\">\n        <h6 className=\"login__header\">Sign In</h6>\n        <LoginForm  onSubmit={handleSubmit} />\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPopup;\n","import React from 'react'\nimport { signInIcon } from '../../icons/icons'\nimport LoginPopup from './LoginPopup'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setVisibility, selectPopupVisibility } from '../../features/reduxSlices/loginPopupSlice';\n\nexport const SignIn = () => {\n  const dispatch = useDispatch();\n  const isPopupVisible = useSelector(selectPopupVisibility);\n  const handleLogin = () => {\n    dispatch(setVisibility(!isPopupVisible));\n  };\n\n  return (\n    <div className=\"header__login login\">\n      <button type=\"button\" className=\"login__button\" onClick={handleLogin}>\n        <span role=\"img\" aria-label=\"login\" className=\"login__icon\">\n          {signInIcon}\n        </span>\n          <span>Sign In</span>\n      </button>\n      <LoginPopup />\n    </div>\n  )\n};\n","export const URL = 'https://randomuser.me/api/1.3/?results=62';\nexport const USER_URL = 'https://randomuser.me/api/1.3/?results=1&nat=us';\n","export const natMap = {\nAD: \"Andorran\",\nAE: \"Emirian\",\nAF: \"Afghan\",\nAG: \"Antiguan or Barbudan\",\nAI: \"Anguillan\",\nAL: \"Albanian\",\nAM: \"Armenian\",\nAO: \"Angolan\",\nAQ: \"Antarctic\",\nAR: \"Argentine\",\nAS: \"American Samoan\",\nAT: \"Austrian\",\nAU: \"Australian\",\nAW: \"Aruban\",\nAX: \"Åland Island\",\nAZ: \"Azerbaijani\",\nBA: \"Bosnian\",\nBB: \"Barbadian\",\nBD: \"Bangladeshi\",\nBE: \"Belgian\",\nBF: \"Burkinabé\",\nBG: \"Bulgarian\",\nBH: \"Bahraini\",\nBI: \"Burundian\",\nBJ: \"Beninese\",\nBL: \"Barthélemois\",\nBM: \"Bermudian, Bermudan\",\nBN: \"Bruneian\",\nBO: \"Bolivian\",\nBQ: \"Bonaire\",\nBR: \"Brazilian\",\nBS: \"Bahamian\",\nBT: \"Bhutanese\",\nBV: \"Bouvet Island\",\nBW: \"Motswana, Botswanan\",\nBY: \"Belarusian\",\nBZ: \"Belizean\",\nCA: \"Canadian\",\nCC: \"Cocos Island\",\nCD: \"Congolese\",\nCF: \"Central African\",\nCG: \"Congolese\",\nCH: \"Swiss\",\nCI: \"Ivorian\",\nCK: \"Cook Island\",\nCL: \"Chilean\",\nCM: \"Cameroonian\",\nCN: \"Chinese\",\nCO: \"Colombian\",\nCR: \"Costa Rican\",\nCU: \"Cuban\",\nCV: \"Cabo Verdean\",\nCW: \"Curaçaoan\",\nCX: \"Christmas Island\",\nCY: \"Cypriot\",\nCZ: \"Czech\",\nDE: \"German\",\nDJ: \"Djiboutian\",\nDK: \"Danish\",\nDM: \"Dominican\",\nDO: \"Dominican\",\nDZ: \"Algerian\",\nEC: \"Ecuadorian\",\nEE: \"Estonian\",\nEG: \"Egyptian\",\nEH: \"Sahrawian\",\nER: \"Eritrean\",\nES: \"Spanish\",\nET: \"Ethiopian\",\nFI: \"Finnish\",\nFJ: \"Fijian\",\nFK: \"Falkland Island\",\nFM: \"Micronesian\",\nFO: \"Faroese\",\nFR: \"French\",\nGA: \"Gabonese\",\nGB: \"British\",\nGD: \"Grenadian\",\nGE: \"Georgian\",\nGF: \"French Guianese\",\nGG: \"Channel Island\",\nGH: \"Ghanaian\",\nGI: \"Gibraltar\",\nGL: \"Greenlandic\",\nGM: \"Gambian\",\nGN: \"Guinean\",\nGP: \"Guadeloupe\",\nGQ: \"Equatoguinean\",\nGR: \"Greek\",\nGS: \"South Sandwich Islands\",\nGT: \"Guatemalan\",\nGU: \"Guamanian\",\nGW: \"Bissau-Guinean\",\nGY: \"Guyanese\",\nHK: \"Hong Kongese\",\nHM: \"Heard Island\",\nHN: \"Honduran\",\nHR: \"Croatian\",\nHT: \"Haitian\",\nHU: \"Magyar\",\nID: \"Indonesian\",\nIE: \"Irish\",\nIL: \"Israeli\",\nIM: \"Manx\",\nIN: \"Indian\",\nIO: \"BIOT\",\nIQ: \"Iraqi\",\nIR: \"Iranian\",\nIS: \"Icelandic\",\nIT: \"Italian\",\nJE: \"Channel Island\",\nJM: \"Jamaican\",\nJO: \"Jordanian\",\nJP: \"Japanese\",\nKE: \"Kenyan\",\nKG: \"Kyrgyzstani\",\nKH: \"Cambodian\",\nKI: \"I-Kiribati\",\nKM: \"Comorian\",\nKN: \"Nevisian\",\nKP: \"North Korean\",\nKR: \"South Korean\",\nKW: \"Kuwaiti\",\nKY: \"Caymanian\",\nKZ: \"Kazakh\",\nLA: \"Laotian\",\nLB: \"Lebanese\",\nLC: \"Saint Lucian\",\nLI: \"Liechtenstein\",\nLK: \"Sri Lankan\",\nLR: \"Liberian\",\nLS: \"Basotho\",\nLT: \"Lithuanian\",\nLU: \"Luxembourgish\",\nLV: \"Latvian\",\nLY: \"Libyan\",\nMA: \"Moroccan\",\nMC: \"Monacan\",\nMD: \"Moldovan\",\nME: \"Montenegrin\",\nMF: \"Saint-Martinoise\",\nMG: \"Malagasy\",\nMH: \"Marshallese\",\nMK: \"Macedonian\",\nML: \"Malinese\",\nMM: \"Burmese\",\nMN: \"Mongolian\",\nMO: \"Chinese\",\nMP: \"Northern Marianan\",\nMQ: \"Martiniquais\",\nMR: \"Mauritanian\",\nMS: \"Montserratian\",\nMT: \"Maltese\",\nMU: \"Mauritian\",\nMV: \"Maldivian\",\nMW: \"Malawian\",\nMX: \"Mexican\",\nMY: \"Malaysian\",\nMZ: \"Mozambican\",\nNA: \"Namibian\",\nNC: \"New Caledonian\",\nNE: \"Nigerien\",\nNF: \"Norfolk Island\",\nNG: \"Nigerian\",\nNI: \"Nicaraguan\",\nNL: \"Netherlandic\",\nNO: \"Norwegian\",\nNP: \"Nepalese\",\nNR: \"Nauruan\",\nNU: \"Niuean\",\nNZ: \"New Zealander\",\nOM: \"Omani\",\nPA: \"Panamanian\",\nPE: \"Peruvian\",\nPF: \"French Polynesian\",\nPG: \"Papuan\",\nPH: \"Filipino\",\nPK: \"Pakistani\",\nPL: \"Polish\",\nPM: \"Miquelonnais\",\nPN: \"Pitcairn Island\",\nPR: \"Puerto Rican\",\nPS: \"Palestinian\",\nPT: \"Portuguese\",\nPW: \"Palauan\",\nPY: \"Paraguayan\",\nQA: \"Qatari\",\nRE: \"Réunionese\",\nRO: \"Romanian\",\nRS: \"Serbian\",\nRU: \"Russian\",\nRW: \"Rwandan\",\nSA: \"Saud\",\nSB: \"Solomon Island\",\nSC: \"Seychellois\",\nSD: \"Sudanese\",\nSE: \"Swedish\",\nSG: \"Singaporean\",\nSH: \"Saint Helenian\",\nSI: \"Slovenian\",\nSJ: \"Svalbard\",\nSK: \"Slovak\",\nSL: \"Sierra Leonean\",\nSM: \"Sammarinese\",\nSN: \"Senegalese\",\nSO: \"Somalian\",\nSR: \"Surinamese\",\nSS: \"South Sudanese\",\nST: \"São Toméan\",\nSV: \"Salvadoran\",\nSX: \"Sint Maarten\",\nSY: \"Syrian\",\nSZ: \"Swazi\",\nTC: \"T&C Islander\",\nTD: \"Chadian\",\nTF: \"FS Territories\",\nTG: \"Togolese\",\nTH: \"Thai\",\nTJ: \"Tajikistani\",\nTK: \"Tokelauan\",\nTL: \"Timorese\",\nTM: \"Turkmen\",\nTN: \"Tunisian\",\nTO: \"Tongan\",\nTR: \"Turkish\",\nTT: \"Trinidadian\",\nTV: \"Tuvaluan\",\nTW: \"Taiwanese\",\nTZ: \"Tanzanian\",\nUA: \"Ukrainian\",\nUG: \"Ugandan\",\nUM: \"American\",\nUS: \"American\",\nUY: \"Uruguayan\",\nUZ: \"Uzbek\",\nVA: \"Vatican\",\nVC: \"Vincentian\",\nVE: \"Venezuelan\",\nVG: \"BV Island\",\nVI: \"U.S.V. Island\",\nVN: \"Vietnamese\",\nVU: \"Vanuatuan\",\nWF: \"Futunan\",\nWS: \"Samoan\",\nYE: \"Yemeni\",\nYT: \"Mahoran\",\nZA: \"South African\",\nZM: \"Zambian\",\nZW: \"Zimbabwean\",\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { natMap } from '../iso2NatMap';\r\n\r\nexport const getContacts = createAsyncThunk(\r\n  'contacts/getContacts', \r\n  async (endpoint, { dispatch }) => {\r\n    const fetchPromise = await fetch(endpoint);\r\n    const { results } = await fetchPromise.json();\r\n    const statistic = {\r\n      collectionSize: results.length,\r\n      males: 0,\r\n      females: 0,\r\n      indeterminate: 0,\r\n      predominate: '',\r\n      nationalities: {},\r\n    };\r\n\r\n    results.forEach(({ gender, nat }) => {\r\n\r\n      statistic.nationalities.hasOwnProperty(natMap[nat]) ? statistic.nationalities[natMap[nat]]++ : statistic.nationalities[natMap[nat]] = 1;\r\n\r\n      if (gender === 'male') {\r\n        statistic.males++;\r\n      }\r\n\r\n      if (gender === 'female') {\r\n        statistic.females++;\r\n      }\r\n\r\n      if (gender === 'indeterminate') {\r\n        statistic.indeterminate++;\r\n      }\r\n\r\n    });\r\n\r\n    statistic.predominate = +statistic.males > +statistic.females ? 'male' : +statistic.males < +statistic.females ? 'female' : 'friend';\r\n\r\n    dispatch(setDefaultValue(results));\r\n    dispatch(setInitialStat(statistic));\r\n\r\n    return results;\r\n    } \r\n);\r\n\r\nexport const contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: {\r\n    defaultValue: [],\r\n    value: [],\r\n    initialStat: {},\r\n    isLoading: false,\r\n  },\r\n  reducers: {\r\n    setDefaultValue: (state, action) => {\r\n\r\n      state.defaultValue = action.payload\r\n      \r\n    },\r\n    setContacts: (state, action) => {\r\n\r\n      state.value = [...action.payload]\r\n\r\n    },\r\n    setInitialStat: (state, action) => {\r\n\r\n      state.initialStat = action.payload;\r\n\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [getContacts.fulfilled]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        value: action.payload,\r\n        isLoading: false,\r\n      }\r\n    },\r\n    [getContacts.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [getContacts.rejected]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n\r\n  }\r\n});\r\n\r\nexport const { setInitialStat, setDefaultValue, setContacts } = contactsSlice.actions;\r\n\r\n\r\n\r\nexport const selectContacts = state => state.contacts.value;\r\nexport const selectInitialStat = state => state.contacts.initialStat;\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\nexport default contactsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const contactsPageConfigSlice = createSlice({\n  name: 'contactsPageConfig',\n  initialState: {\n    stringifyMode: false,\n  },\n  reducers: {\n    setStringifyMode: (state, action) => {\n      state.stringifyMode = action.payload\n    },\n  },\n});\n\nexport const { setStringifyMode } = contactsPageConfigSlice.actions;\n\n\n\nexport const selectStringifyMode = state => state.contactsPageConfig.stringifyMode;\nexport default contactsPageConfigSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const filterSlice = createSlice({\n  name: 'filters',\n  initialState: {\n    preparedContacts: null,\n    activeName: null,\n    activeNat: null,\n    activeGender: null,\n    isContactsWereUpdated: false,\n    sortType: 'default',\n    statistic: {\n      collectionSize: '',\n      males: 0,\n      females: 0,\n      indeterminate: 0,\n      predominate: '',\n      nationalities: {},\n    },\n  },\n  reducers: {\n    setDefaultFilteredContacts: (state, action) => {\n      return {\n      ...state,\n      preparedContacts: [...action.payload],\n      }\n    },\n    setActiveNat: (state, action) => {\n      return {\n        ...state,\n        activeNat: action.payload,\n      }\n    },\n    setActiveGender: (state, action) => {\n      return {\n        ...state,\n        activeGender: action.payload,\n      }\n    },\n    setActiveName: (state, action) => {\n      return {\n        ...state,\n        activeName: action.payload,\n      }\n    },\n    setIsContactsWereUpdated: (state, action) => {\n      return {\n        ...state,\n        isContactsWereUpdated: action.payload,\n      }\n    },\n    setSortType: (state, action) => {\n      return {\n        ...state,\n        sortType: action.payload,\n      }\n    },\n    setStatistic: (state, action) => {\n      \n      state.statistic = action.payload\n\n    }\n  }\n});\n\nexport const {\n  setSortType,\n  setIsContactsWereUpdated,\n  setActiveName,\n  setActiveGender,\n  setActiveNat,\n  setDefaultFilteredContacts,\n  setStatistic,\n  } = filterSlice.actions;\n\n\n\nexport const selectPreparedContacts = state => state.filters.preparedContacts;\nexport const selectNationalities = state => state.filters.nationalitiesList;\nexport const selectActiveNat = state => state.filters.activeNat;\nexport const selectActiveName = state => state.filters.activeName;\nexport const selectActiveGender = state => state.filters.activeGender;\nexport const selectIsContactsUpdated = state => state.filters.isContactsWereUpdated;\nexport const selectSortType = state => state.filters.sortType;\nexport const selectStatistic = state => state.filters.statistic;\n\nexport default filterSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const paginationSlice = createSlice({\n  name: 'paginationSlice',\n  initialState: {\n    prepContSlice: [],\n    perPage: 12,\n    pagesCount: 0,\n  },\n  reducers: {\n    setPrepContSlice: (state, action) => {\n\n      return {\n        ...state,\n        prepContSlice: [...action.payload],\n      };\n    },\n    setPerPage: (state, action) => {\n      state.perPage = action.payload\n    },\n    setPagesCount: (state, action) => {\n      state.pagesCount = action.payload\n    },\n  },\n});\n\nexport const { setPrepContSlice, setPerPage, setPagesCount } = paginationSlice.actions;\n\n\n\nexport const selectPrepContSlice = state => state.pagination.prepContSlice;\nexport const selectPerPage = state => state.pagination.perPage;\nexport const selectPagesCount = state => state.pagination.pagesCount;\n\nexport default paginationSlice.reducer;","import React from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport { logOutIcon, userIcon } from '../../../icons/icons';\nimport './Dropdown.css';\nimport { batch, useDispatch } from 'react-redux';\nimport { setUser, setIsUser } from '../../../features/reduxSlices/userSlice';\nimport { setContacts } from '../../../features/reduxSlices/contactsSlice';\nimport { setStringifyMode } from '../../../features/reduxSlices/contactsPageConfigSlice';\nimport { setDefaultFilteredContacts, setActiveNat, setActiveGender, setActiveName } from '../../../features/reduxSlices/filterSlice';\nimport { setPrepContSlice } from '../../../features/reduxSlices/paginationSlice';\n\nexport const Dropdown = ({ hideAwaySelf }) => {\n  const profile = 'Profile';\n  const logOut = 'LogOut';\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleClick = (event) => {\n    const { target: { innerText } } = event;\n    const redirectToProfile = () => history.push(`/${profile.toLowerCase()}`);\n    const redirectToHome = () => {\n      history.push('./')\n      localStorage.clear();\n      batch(() => {\n        dispatch(setUser(null));\n        dispatch(setIsUser(false));\n        dispatch(setContacts([]));\n        dispatch(setStringifyMode(false));\n        dispatch(setDefaultFilteredContacts([]));\n        dispatch(setActiveNat(null));\n        dispatch(setActiveGender(null));\n        dispatch(setActiveName(null));\n        dispatch(setPrepContSlice([]));\n      });\n\n    };\n\n    event.preventDefault();\n\n    hideAwaySelf();\n    innerText === profile ? redirectToProfile() : redirectToHome()\n    \n  }\n\n  return (\n    <>\n      <NavLink to=\"/profile\" onClick={handleClick} className=\"dropdown__link\" value=\"profile\">\n        <span role=\"img\" aria-label=\"userIcon\" className=\"dropdown__icon\">\n          {userIcon}\n        </span>\n        <span>{profile}</span>\n      </NavLink>\n      <NavLink to=\"/\" onClick={handleClick} className=\"dropdown__link\">\n        <span role=\"img\" aria-label=\"logOut\" className=\"dropdown__icon\">\n          {logOutIcon}\n        </span>\n        <span>{logOut}</span>\n      </NavLink>\n    </>\n  )\n};\n\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser, setUser, getUser } from '../../../features/reduxSlices/userSlice';\nimport { USER_URL } from '../../../features/API/config';\nimport './UserDashboard.css';\nimport { arrowIcon } from '../../../icons/icons';\nimport { Dropdown } from './Dropdown';\n\nexport const UserDashboard = () => {\n  const [isDropdownShown, setIsDropdownShown] = useState(false);\n  const setDropdownVisible = () => setIsDropdownShown(true);\n  const setDropdownHidden = () => setIsDropdownShown(false);\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  useEffect(() => {\n\n    if (user !== null) {\n      localStorage.setItem('user', JSON.stringify(user));\n    };\n    \n    if (!localStorage.hasOwnProperty('user')) {\n      dispatch(getUser(USER_URL));\n    };\n\n    if (localStorage.hasOwnProperty('user') && user === null) {\n      dispatch(setUser(JSON.parse(localStorage.getItem('user'))));\n    };\n  }, [dispatch, user]);\n\n  return (\n    <div className=\"header__login user-dashboard\">\n      <div className=\"user-dashboard__wrapper\" onMouseEnter={setDropdownVisible} onMouseLeave={setDropdownHidden}>\n        {user \n          ?\n          <>\n            <span className=\"user-dashboard__text\">\n            {`Hello ${user?.name?.title} ${user?.name?.first} ${user?.name?.last}`}\n            </span>\n            <span className=\"user-dashboard__arrow\">{arrowIcon}</span>\n            <img \n              src={user?.picture?.large} \n              alt=\"user foto\" \n              className=\"user-dashboard__image\" \n            />\n            <div className=\"user-dashboard__dropdown dropdown\">\n              {isDropdownShown && <Dropdown hideAwaySelf={setDropdownHidden} />}\n            </div>\n          </>\n          :\n          <div>Loading...</div> }\n      </div>\n    </div>\n  )\n};\n\n","import React from 'react';\nimport { mainLogoIcon } from '../../icons/icons';\nimport './Header.css';\nimport HeaderNavigation from '../contacts/contacts_header/HeaderNavigation';\nimport { SignIn } from '../login/SignIn';\nimport { useSelector } from 'react-redux';\nimport { selectIsUser } from '../../features/reduxSlices/userSlice';\nimport { UserDashboard } from './user_dashboard/UserDashboard';\n\nexport const Header = () => {\n  const isLogged = useSelector(selectIsUser);\n\n  return (\n    <header className=\"App__header header\">\n        <div className=\"header__wrapper\">\n          <span >{mainLogoIcon}</span>\n          <HeaderNavigation />\n        </div>\n        {isLogged ? <UserDashboard /> : <SignIn />}\n      </header>\n  )\n};\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from '../features/reduxSlices/contactsSlice';\r\nimport loginPopupReducer from '../features/reduxSlices/loginPopupSlice';\r\nimport contactsPageReducer from '../features/reduxSlices/contactsPageConfigSlice';\r\nimport userReducer from '../features/reduxSlices/userSlice';\r\nimport filtersReducer from '../features/reduxSlices/filterSlice';\r\nimport paginationReducer from '../features/reduxSlices/paginationSlice';\r\nimport { reducer as formFReducer } from 'redux-form';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    loginPopup: loginPopupReducer,\r\n    user: userReducer,\r\n    contactsPageConfig: contactsPageReducer,\r\n    filters: filtersReducer,\r\n    pagination: paginationReducer,\r\n    form: formFReducer,\r\n  },\r\n});","import store from \"../app/store\";\nimport { setSortType, setStatistic } from \"./reduxSlices/filterSlice\";\nimport { setPagesCount, setPrepContSlice } from \"./reduxSlices/paginationSlice\";\n\n/**\n * \n * @param {array} array Array of Objects Get piece of data from \n * \n * @param {string} string key of object value we need\n * \n */\nexport const getPieceOfData = (array, string) => {\n  const uniqKeys = {};\n\n  if (array) {array.forEach(\n      (item) => {\n\n        if(!uniqKeys.hasOwnProperty(item[string])) {\n          uniqKeys[item[string]] = true;\n        }\n\n      }\n    );\n  }\n\n  return Object.keys(uniqKeys) || [];\n};\n\n/**\n * \n * @param {Array} array used for pagination\n */\nconst pagesCounter = (array) => {\n  const pages = (array.length <= store.getState().pagination.perPage)\n  ?\n  1\n  :\n  Math.ceil(array.length/store.getState().pagination.perPage);\n\n  return pages;\n} \n\n/**\n * \n * @param {Array} array from slice will created \n * @param {Number} start index from what to start\n * @param {Number} end index for end (this index wouldn't be include)\n */\nconst createPrepContactSlice = (array, start, end) => {\n  const perPage = store.getState().pagination.perPage;\n  const startIndex = start || 0;\n  const endIndex = end || (startIndex + perPage); \n  const contactsSlice = array.slice(startIndex, endIndex);\n\n  return contactsSlice;\n\n}\n\n/**\n * \n * @param {Array} array \n * \n * @param {String} name \n * \n * @param {String} gender \n * \n * @param {String} nationality \n */\nexport const contactsPreparator = (array, name, gender, nationality) => {\n\n  if (name === null && gender === null && nationality === null) {\n    \n    if (array.length) {\n      const pagesCount = pagesCounter(array);\n      const contactsPerPage = store.getState().pagination.perPage;\n      const contactsSlice = pagesCount <= 1 ? array : array.slice(0 ,contactsPerPage); \n\n      store.dispatch(setStatistic(store.getState().contacts.initialStat));\n      store.dispatch(setPagesCount(pagesCount));\n      store.dispatch(setPrepContSlice(contactsSlice));\n    }\n    return array;\n  }\n\n  const statistic = {\n    collectionSize: '',\n    males: 0,\n    females: 0,\n    indeterminate: 0,\n    predominate: '',\n    nationalities: {},\n  };\n\n  const preparedContacts = array.filter(\n    ({ nat: contactNat, gender: contactGender, name: dirtyName }) => {\n\n    if (name === null && gender === null && nationality !== null) {\n      const isNatEqual = contactNat.toLowerCase() === nationality.toLowerCase();\n\n      if (isNatEqual) {\n        contactGender === 'male' ? statistic.males++ : contactGender === 'female' ? statistic.females++ : statistic.indeterminate++;\n\n        if (statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat]++;\n        }\n  \n        if (!statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat] = 1;\n        }\n\n      }\n\n      return isNatEqual ? true : false;\n    }\n\n    if (name === null && gender !== null && nationality !== null) {\n      const isNatEqual = contactNat.toLowerCase() === nationality.toLowerCase();\n      const isGenderEqual = contactGender.toLowerCase() === gender.toLowerCase();\n      const isEqual = isNatEqual && isGenderEqual;\n\n      if (isEqual) {\n        console.log('stat', statistic);\n        contactGender === 'male' ? statistic.males++ : contactGender === 'female' ? statistic.females++ : statistic.indeterminate++;\n\n        if (statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat]++;\n        }\n  \n        if (!statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat] = 1;\n        }\n\n      }\n\n      return isEqual ? true : false;\n    }\n\n    if (name === null && gender !== null && nationality === null) {\n      const isGenderEqual = contactGender.toLowerCase() === gender.toLowerCase();\n\n      if (isGenderEqual) {\n        contactGender === 'male' ? statistic.males++ : contactGender === 'female' ? statistic.females++ : statistic.indeterminate++;\n\n        if (statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat]++;\n        }\n  \n        if (!statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat] = 1;\n        }\n\n      }\n\n      return isGenderEqual ? true : false;\n    }\n\n    if (name !== null && gender === null && nationality === null) {\n      const contactName = Object.values(dirtyName).join(' ').toLowerCase();\n      const isNameContains = contactName.toLowerCase().includes(name);\n\n      if (isNameContains) {\n        contactGender === 'male' ? statistic.males++ : contactGender === 'female' ? statistic.females++ : statistic.indeterminate++;\n\n        if (statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat]++;\n        }\n  \n        if (!statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat] = 1;\n        }\n\n      }\n\n      return isNameContains;\n    }\n\n    if (name !== null && gender === null && nationality !== null) {\n      const contactName = Object.values(dirtyName).join(' ').toLowerCase();\n      const isNameContains = contactName.toLowerCase().includes(name);\n      const isNatEqual = contactNat.toLowerCase() === nationality.toLowerCase();\n      const isEqual = isNameContains && isNatEqual;\n\n      if (isEqual) {\n        contactGender === 'male' ? statistic.males++ : contactGender === 'female' ? statistic.females++ : statistic.indeterminate++;\n\n        if (statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat]++;\n        }\n  \n        if (!statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat] = 1;\n        }\n\n      }\n\n      return isEqual ? true : false;\n    }\n    \n    if (name !== null && gender !== null && nationality !== null) {\n      const contactName = Object.values(dirtyName).join(' ').toLowerCase();\n      const isNameContains = contactName.toLowerCase().includes(name);\n      const isNatEqual = contactNat.toLowerCase() === nationality.toLowerCase();\n      const isGenderEqual = contactGender.toLowerCase() === gender.toLowerCase();\n      const isEqual = isNameContains && isNatEqual && isGenderEqual;\n\n      if (isEqual) {\n        contactGender === 'male' ? statistic.males++ : contactGender === 'female' ? statistic.females++ : statistic.indeterminate++;\n        // contactGender === 'male' ? statistic.males++ : contactGender === 'female' ? statistic.females++ : statistic.indeterminate++;\n\n        if (statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat]++;\n        }\n  \n        if (!statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat] = 1;\n        }\n\n      }\n\n\n      return isEqual ? true : false;\n    }\n\n    if (name !== null && gender !== null && nationality === null) {\n      const contactName = Object.values(dirtyName).join(' ').toLowerCase();\n      const isNameContains = contactName.toLowerCase().includes(name);\n      const isGenderEqual = contactGender.toLowerCase() === gender.toLowerCase();\n      const isEqual = isNameContains && isGenderEqual;\n\n      if (isEqual) {\n        contactGender === 'male' ? statistic.males++ : contactGender === 'female' ? statistic.females++ : statistic.indeterminate++;\n\n        if (statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat]++;\n        }\n  \n        if (!statistic.nationalities.hasOwnProperty(contactNat)) {\n          statistic.nationalities[contactNat] = 1;\n        }\n\n      }\n\n      return isEqual ? true : false;\n    }\n\n    return null;\n  });\n\n  statistic.collectionSize = preparedContacts.length;\n  statistic.predominate = +statistic.males > +statistic.females ? 'male' : +statistic.males < +statistic.females ? 'female' : 'friend';\n  store.dispatch(setPagesCount(pagesCounter(preparedContacts)));\n  store.dispatch(setPrepContSlice(createPrepContactSlice(preparedContacts)));\n\n  store.dispatch(setStatistic(statistic));\n\n  return preparedContacts\n};\n\n/**\n * \n * @param {Array} contacts \n * @param {String} sortType \n */\n\n /**\n  * \n  * @param {Array} contacts for sort\n  * @param {String} sortType accept next types of sort: 'asc', 'desc', 'default'\n  */\nexport const sorter = (contacts, sortType = 'default') => {\n  const nextSortType = (sortType === 'default') ? 'asc': (sortType === 'asc') ? 'desc' : 'default';\n\n  store.dispatch(setSortType(nextSortType));\n\n  if (sortType === 'desc') {\n    const initContacts = store.getState().contacts.defaultValue;\n    return initContacts;\n  }\n  \n  const collator = new Intl.Collator({ sensitivity: 'base' });\n\n  return [...contacts].sort(\n    ({ name: nameA }, { name: nameB }) => {\n      const { title: titleA, first: firstA, last: lastA } = nameA;\n      const { title: titleB, first: firstB, last: lastB } = nameB;\n      const fullNameA = `${titleA} ${firstA} ${lastA}`;\n      const fullNameB = `${titleB} ${firstB} ${lastB}`;\n\n      if (sortType === 'default') {\n        \n        return collator.compare(fullNameA, fullNameB);\n      };\n\n      if (sortType === 'asc') {\n\n        return collator.compare(fullNameB, fullNameA);\n      }\n      \n      return 0;\n    });\n\n}","import React, { useEffect } from 'react';\nimport './ContactsHeader.css';\nimport { refreshIcon, platesViewIcon, tabularViewIcon } from '../../../icons/icons';\nimport { batch, useDispatch, useSelector } from 'react-redux';\nimport { getContacts, selectContacts } from '../../../features/reduxSlices/contactsSlice';\nimport { URL } from '../../../features/API/config';\nimport { setStringifyMode } from '../../../features/reduxSlices/contactsPageConfigSlice';\nimport { selectActiveGender, selectActiveName, selectActiveNat, setActiveGender, setActiveName, setActiveNat, setDefaultFilteredContacts, setIsContactsWereUpdated } from '../../../features/reduxSlices/filterSlice';\nimport { contactsPreparator } from '../../../features/functions';\n\nexport const ContactsHeader = () => {\n  const dispatch = useDispatch();\n  const contactsFromServer = useSelector(selectContacts);\n  const activeName = useSelector(selectActiveName);\n  const activeGender = useSelector(selectActiveGender);\n  const activeNat = useSelector(selectActiveNat);\n\n\n\n  const handleUserRefresh = () => {\n    batch(() => {\n    dispatch(getContacts(URL));\n    dispatch(setIsContactsWereUpdated(true));\n    dispatch(setActiveName(null));\n    dispatch(setActiveNat(null));\n    dispatch(setActiveGender(null));\n    \n    });\n  }\n\n  const handlePlatesViewMode = () => {\n    localStorage.setItem('viewMode', false)\n    dispatch(setStringifyMode(false));\n  };\n\n  const handleStringViewMode = () => {\n    localStorage.setItem('viewMode', true)\n    dispatch(setStringifyMode(true));\n  }\n\n  useEffect(()=> {\n    const preparedContacts = contactsPreparator(contactsFromServer, activeName, activeGender, activeNat);\n    dispatch(setDefaultFilteredContacts(preparedContacts))\n  },[dispatch, contactsFromServer])\n\n\n  return (\n    <div className=\"contacts__header\">\n      <h1>Contacts</h1>\n      <div className=\"contacts__button-group\">\n        <button type=\"button\" className=\"contacts__button--dotted\" onClick={handleUserRefresh}><span>{refreshIcon}</span></button>\n        <button type=\"button\" className=\"contacts__button\" value=\"false\" onClick={handlePlatesViewMode}>{platesViewIcon}</button>\n        <button type=\"button\" className=\"contacts__button\" value={true} onClick={handleStringViewMode}>{tabularViewIcon}</button>\n      </div>\n    </div>\n  )\n};\n\n","import React, { useEffect, useState } from 'react'\nimport { batch, useDispatch, useSelector } from 'react-redux';\nimport { contactsPreparator, getPieceOfData } from '../../../../features/functions';\nimport { selectContacts } from '../../../../features/reduxSlices/contactsSlice';\nimport { selectActiveGender, selectActiveName, selectActiveNat, selectPreparedContacts, setActiveGender, setDefaultFilteredContacts, setIsContactsWereUpdated } from '../../../../features/reduxSlices/filterSlice'\n\nexport const FilterByGender = () => {\n  const dispatch = useDispatch();\n  const activeNat = useSelector(selectActiveNat);\n  const activeName = useSelector(selectActiveName);\n  const activeGender = useSelector(selectActiveGender);\n  const initialValue = activeGender ? activeGender : 'all';\n\n  const [value, setValue] = useState(initialValue);\n  const initialContacts = useSelector(selectContacts);\n  const contacts = useSelector(selectPreparedContacts);\n  const genders = getPieceOfData(contacts, 'gender');\n\n  const handleChange = ({target: { value }}) => {\n    const reduxValue = (value.toLowerCase() === 'all') ? null : value.toLowerCase();\n    const stateValue = (value.toLowerCase() === 'all') ? 'all' : value.toLowerCase();\n    const filteredContacts = contactsPreparator(initialContacts, activeName, reduxValue, activeNat);\n\n    setValue(stateValue);\n\n    batch(() => {\n      dispatch(setActiveGender(reduxValue));\n      dispatch(setDefaultFilteredContacts(filteredContacts));\n      dispatch(setIsContactsWereUpdated(true));\n    })\n\n  }\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [dispatch, initialValue, contacts])\n\n  return (\n    <select className=\"search-bar__item\" name=\"gender\" value={value} onChange={handleChange}>\n      <option value=\"all\">Gender</option>\n      {genders?.map(gender => (\n        <option\n          key={gender}\n          value={gender}\n        >\n          {gender.toUpperCase()}\n        </option>\n      ))}\n    </select>\n  )\n};\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsPreparator } from '../../../../features/functions';\nimport { selectContacts } from '../../../../features/reduxSlices/contactsSlice';\nimport { selectActiveGender, selectActiveNat, setDefaultFilteredContacts as setPreparedContacts, setActiveName } from '../../../../features/reduxSlices/filterSlice';\n\nexport const FilterByName = () => {\n  const dispatch = useDispatch();\n  const initialContact = useSelector(selectContacts);\n  const activeNat = useSelector(selectActiveNat);\n  const activeGender = useSelector(selectActiveGender);\n\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n\n      const reduxValueName = (inputValue.toLowerCase() === '') ? null : inputValue.toLowerCase();\n      const filteredContacts = contactsPreparator(initialContact, reduxValueName, activeGender, activeNat) || [];\n      \n\n      dispatch(setActiveName(reduxValueName));\n      dispatch(setPreparedContacts(filteredContacts));\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  },[dispatch, inputValue]);\n\n\n  const handleInputChange = ({ target: { value } }) => {\n    setInputValue(value);\n  };\n\n  return (\n    <label htmlFor=\"name\" className=\"search-bar__item\">\n      <input \n        value={inputValue}\n        type=\"text\" \n        name=\"name\" \n        placeholder=\"Search by full name\" \n        className=\"search-bar__name\"\n        onChange={handleInputChange}\n      />\n    </label>\n  )\n};\n","import React, { useEffect, useState } from 'react';\nimport { batch, useDispatch, useSelector } from 'react-redux';\nimport { contactsPreparator, getPieceOfData } from '../../../../features/functions';\nimport { selectContacts } from '../../../../features/reduxSlices/contactsSlice';\nimport { selectActiveGender, selectActiveName, selectActiveNat, selectPreparedContacts, setActiveNat, setDefaultFilteredContacts as setPreparedContacts, setIsContactsWereUpdated} from '../../../../features/reduxSlices/filterSlice';\n\nexport const FilterByNationality = () => {\n  const dispatch = useDispatch();\n  const activeNat = useSelector(selectActiveNat);\n  const activeName = useSelector(selectActiveName);\n  const activeGender = useSelector(selectActiveGender);\n  const initialValue = activeNat ? activeNat : 'all';\n\n  const [value, setValue] = useState(initialValue);\n  const contacts = useSelector(selectPreparedContacts);\n  const initialContact = useSelector(selectContacts);\n  const nationalities = getPieceOfData(contacts, 'nat');\n\n  const handleChange = ({target: { value }}) => {\n    const reduxValueNat = (value.toLowerCase() === 'all') ? null : value.toLowerCase();\n    const stateValueNat = (value.toLowerCase() === 'all') ? 'all' : value.toLowerCase();\n    const filteredContacts = contactsPreparator(initialContact, activeName, activeGender, reduxValueNat);\n\n    setValue(stateValueNat);\n    \n    batch(()=> {\n      dispatch(setActiveNat(reduxValueNat));\n      dispatch(setPreparedContacts(filteredContacts))\n      dispatch(setIsContactsWereUpdated(true));\n    });\n\n  }\n\n  useEffect(() => {\n    dispatch(setIsContactsWereUpdated(false));\n    setValue(initialValue);\n  }, [dispatch, initialValue])\n  return (\n    \n    <select className=\"search-bar__item\" name=\"nationality\" value={value} onChange={handleChange}>\n      <option className=\"search-bar__nationality\" value=\"all\">All Nationalities</option>\n      {nationalities?.map(nat => (\n        <option \n          key={nat}\n          className=\"search-bar__nationality\" \n          value={nat.toLowerCase()}\n        >\n          {nat}\n        </option>\n        \n      ))}\n    </select>\n  )\n}\n","import React from 'react';\nimport { batch, useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectInitialStat } from '../../../features/reduxSlices/contactsSlice';\nimport { setActiveGender, setActiveName, setActiveNat, setDefaultFilteredContacts, setIsContactsWereUpdated, setStatistic } from '../../../features/reduxSlices/filterSlice';\nimport { selectPerPage, setPrepContSlice } from '../../../features/reduxSlices/paginationSlice';\nimport './ContactsSearchBar.css';\nimport { FilterByGender } from './filters/FilterByGender';\nimport { FilterByName } from './filters/FilterByName';\nimport { FilterByNationality } from './filters/FilterByNationality';\n\nexport const ContactsSearchBar = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const contactsPerPage = useSelector(selectPerPage);\n  const initStat = useSelector(selectInitialStat);\n\n\n\n  const handleReset = (event) => {\n    event.preventDefault();\n\n    const prepContSlice = contacts.slice(0, contactsPerPage);\n\n    batch(() => {\n      dispatch(setActiveName(null));\n      dispatch(setActiveNat(null));\n      dispatch(setActiveGender(null));\n      dispatch(setDefaultFilteredContacts(contacts));\n      dispatch(setPrepContSlice(prepContSlice));\n      dispatch(setIsContactsWereUpdated(true));\n      dispatch(setStatistic(initStat));\n    });\n    \n  }\n  \n  return (\n    <div className=\"contacts__search-bar search-bar\">\n      <form className=\"search-bar__wrapper\" onSubmit={handleReset}>\n        <FilterByName />\n        <FilterByGender />\n        <FilterByNationality />\n        <label htmlFor=\"\" className=\"search-bar__item search-bar__checkbox\">\n          <input type=\"checkbox\" />\n          <span>I am creator</span>\n        </label>\n        <button type=\"Submit\" className=\"search-bar__item\">\n          <span className=\"search-bar__button\">X Clear</span>\n        </button>\n      </form>\n    </div>\n  )\n};\n\n","import React from 'react';\nimport './ContactPlate.css';\nimport { useHistory } from 'react-router-dom';\nimport { natMap } from '../../../../features/iso2NatMap';\n\nexport const ContactPlate = (props) => {\n  const { contact } = props;\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.push(`/${contact.login.uuid}`)\n  }\n\n  return (\n    <li className=\"contacts__item contact\" onClick={handleClick}>\n        <img src={contact?.picture?.large} alt=\"contact\" className=\"contact__foto\"/>\n        <div className=\"contact__text-area\">\n          <span className=\"contact__name\">\n            {`${contact?.name.title} ${contact?.name.first} ${contact?.name.last} (${contact?.dob.age} years)`}\n          </span>\n          <span><a href={`mailto:${contact?.email}`} className=\"contact__link\">{contact?.email}</a></span>\n          <span><a href={`tel:${contact?.phone}`} className=\"contact__link\">{contact?.phone}</a></span>\n          <span>{`/${contact?.location.country}/`}</span>\n          <span>{`${contact?.location.postcode}, ${contact?.location.state}, ${contact?.location.street.name} ${contact?.location.street.number}`}</span>\n          <span className=\"contact__nationality\">{natMap[contact?.nat]}</span>\n        </div>\n    </li>\n  )\n};\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { selectPrepContSlice } from '../../../../features/reduxSlices/paginationSlice';\nimport { ContactPlate } from './ContactPlate';\n\nexport const ContactsPlates = () => {\n  const contacts = useSelector(selectPrepContSlice);\n\n  return (\n    <ul className=\"contacts\">\n      {contacts?.map(contact => (\n        <ContactPlate key={contact.login.uuid} contact={contact}/>\n      ))}\n    </ul>\n  )\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { natMap } from '../../../../features/iso2NatMap';\nimport './Row.css';\n\nexport const Row = (props) => {\n  const history = useHistory();\n  const { login, nat, location, phone, email, picture, name: { title, first,last }, dob } = props;\n  const date = new Date (dob.date);\n  const dateOptions = {\n    weekday: 'long',\n    year: 'numeric', month: 'numeric', day: 'numeric',\n    hour: 'numeric', minute: 'numeric', second: 'numeric',\n  }\n  const preparedDate = new Intl.DateTimeFormat('en-US', dateOptions).format(date)\n\n  const handleClick = () => {\n    history.push(`/${login.uuid}`)\n  }\n\n  return (\n    <>\n      <tr className=\"contact-row\">\n        <th className=\"contact-row__header\">\n          <img src={picture.large} className=\"contact-row__image\" alt=\"contact foto\"/>\n        </th>\n        <td><span onClick={handleClick} className=\"contact-row__name\">{`${title} ${first} ${last}`}</span></td>\n        <td>\n          <span className=\"contact-row__age\">{`${preparedDate}`}</span>\n          <div>{`${dob.age} years`}</div>\n        </td>\n        <td><a href={`mailto:${email}`}>{email}</a></td>\n        <td><a href={`tel:${phone}`} className=\"contact-row__tel\">{phone}</a></td>\n        <td>\n          <span className=\"contact-row__location\">\n            {`${location.postcode}, ${location.state}, ${location.street.name} ${location.street.number}`}\n          </span>\n        </td>\n        <td><span className=\"contact-row__nationality\">{natMap[nat]}</span></td>\n      </tr>\n    </>\n  )\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sorter } from '../../../../features/functions';\nimport { selectContacts, setContacts } from '../../../../features/reduxSlices/contactsSlice';\nimport { selectSortType } from '../../../../features/reduxSlices/filterSlice';\nimport { selectPrepContSlice } from '../../../../features/reduxSlices/paginationSlice';\nimport { arrowUp, arrowDown } from '../../../../icons/icons';\nimport './ContactsTable.css';\nimport { Row } from './Row';\n\nexport const ContactsTable = () => {\n  const contacts = useSelector(selectPrepContSlice);\n  const contactsForSort = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const activeSortType = useSelector(selectSortType);\n\n  const handleSort = () => {\n    let sortedContacts = sorter(contactsForSort, activeSortType)\n    dispatch(setContacts(sortedContacts));\n  }\n\n  return (\n    <div className=\"contactsTable\">\n      <table className=\"contactsTable__wrapper\">\n        <thead>\n          <tr className=\"contactsTable__row\">\n            <th scope=\"col\" className=\"contactsTable__avatar\"><span className=\"contactsTable__headers--center\">Avatar</span></th>\n            <th scope=\"col\" className=\"contactsTable__cursor-area\" onClick={handleSort}>\n              <span className=\"contactsTable__headers--clickable\">Full name</span>\n              <span className=\"contactsTable__sort\">\n                <span className={`contactsTable__arrow-up${activeSortType === 'asc' ? '--active' : ''}`}>{arrowUp}</span>\n                <span className={`contactsTable__arrow-down${activeSortType === 'desc' ? '--active' : ''}`}>{arrowDown}</span>\n              </span>\n            </th>\n            <th scope=\"col\"><span className=\"contactsTable__headers\">Birthday</span></th>\n            <th scope=\"col\"><span className=\"contactsTable__headers\">E-mail</span></th>\n            <th scope=\"col\"><span className=\"contactsTable__headers\">Phone</span></th>\n            <th scope=\"col\"><span className=\"contactsTable__headers\">Location</span></th>\n            <th scope=\"col\"><span className=\"contactsTable__headers\">Nationality</span></th>\n          </tr>\n        </thead>\n        <tbody>\n          {contacts?.map(contact => <Row key={contact.login.uuid} {...contact}/>)}\n        </tbody>\n      </table>\n    </div>\n  )\n};","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { selectStatistic } from '../../../features/reduxSlices/filterSlice';\nimport './Statistic.css';\n\nexport const Statistic = () => {\n  const {\n    collectionSize,\n    males,\n    females,\n    indeterminate,\n    predominate,\n    nationalities,\n    } = useSelector(selectStatistic);\n\n  return (\n    <div className=\"statistic\">\n        <h3 className=\"statistic__title\">Statistic</h3>\n        <div className=\"statistic__general\">\n          <div className=\"statistic__item\"><span className=\"statistic__headers\">Collection size</span><span className=\"statistic__item--big\">{collectionSize}</span></div>\n          <div className=\"statistic__item\"><span className=\"statistic__headers\">Males</span><span className=\"statistic__item--big\">{males}</span></div>\n          <div className=\"statistic__item\"><span className=\"statistic__headers\">Females</span><span className=\"statistic__item--big\">{females}</span></div>\n          <div className=\"statistic__item\"><span className=\"statistic__headers\">Indeterminate</span><span className=\"statistic__item--big\">{indeterminate}</span></div>\n        </div>\n        <span className=\"statistic__predominator\">{`${predominate}s are predominate`}</span>\n        <div className=\"statistic__nationality\">\n        {Object.keys(nationalities)?.map(\n          (nat, i) => (\n            <div className=\"\" key={nat}>\n                <span>{`${nat}:`}</span>\n                <span className=\"statistic__nationality--bold\">{nationalities[nat]}</span>\n            </div>\n        ))}\n      </div>\n    </div>\n  )\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPagesCount, selectPerPage, setPrepContSlice } from '../features/reduxSlices/paginationSlice';\nimport { selectPreparedContacts } from '../features/reduxSlices/filterSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport const PaginationRounded = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const pages = useSelector(selectPagesCount);\n  const perPage = useSelector(selectPerPage);\n  const contacts = useSelector(selectPreparedContacts);\n  \n  const handleClick = (event, page) => {\n    if (pages === 1) {\n      return\n    }\n    const startIndex = perPage * (page - 1);\n    const endIndex = startIndex + perPage; \n    const contactsSlice = contacts.slice(startIndex, endIndex);\n    dispatch(setPrepContSlice(contactsSlice));\n  }\n\n  return (\n    <div className=\"contacts__pagination\">\n      <div className={classes.root}>\n        <Pagination count={pages} shape=\"rounded\" onChange={handleClick}/>\n      </div>\n    </div>\n  );\n}","import React, { useEffect } from 'react';\r\nimport './Contacts.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectContacts, getContacts } from '../../features/reduxSlices/contactsSlice';\r\nimport { URL } from '../../features/API/config';\r\nimport { ContactsHeader } from './contacts_header/ContactsHeader';\r\nimport { ContactsSearchBar } from './contact_search-bar/ContactsSearchBar';\r\nimport { ContactsPlates } from './contacts_body/Plates/ContactsPlates';\r\nimport { ContactsTable } from './contacts_body/Table/ContactsTable';\r\nimport { selectStringifyMode } from '../../features/reduxSlices/contactsPageConfigSlice';\r\nimport { Statistic } from './statistic/Statistic';\r\nimport { PaginationRounded } from '../Pagination';\r\n\r\nexport function Contacts() {\r\n  const dispatch = useDispatch();\r\n  const contactsFromServer = useSelector(selectContacts);\r\n  const isLocalViewMode = localStorage.hasOwnProperty('viewMode');\r\n  const reduxViewMode = useSelector(selectStringifyMode);\r\n  const isStringMode = isLocalViewMode ? localStorage.getItem('viewMode') : reduxViewMode;\r\n\r\n  useEffect(() => {\r\n    if (!contactsFromServer.length) {\r\n      dispatch(getContacts(URL));\r\n    };\r\n\r\n  }, [contactsFromServer.length, dispatch]);\r\n\r\n  return (\r\n    <div className=\"App__contacts\">\r\n      <ContactsHeader />\r\n      <ContactsSearchBar />\r\n      {isStringMode ? <ContactsTable /> : <ContactsPlates />}\r\n      <Statistic />\r\n      <PaginationRounded />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\nimport { reactIcon } from '../icons/icons';\nimport './Home.css';\nexport const Home = () => {\n  return (\n    <div className=\"home\">\n      {reactIcon}\n    </div>\n  )\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './NotFound.css';\n\nexport const NotFound = () => {\n  const history = useHistory();\n  console.log('history', history);\n  return (\n    <div className=\"not-found\">\n      <span className=\"not-found__title\">Not Found</span>\n    </div>\n  )\n};\n","import React from 'react';\nimport { reactIcon } from '../../icons/icons';\nimport './Contacts.css';\n\nexport const Loading = ({ isVisible }) => {\n\n  return (isVisible\n    ?\n    <div className=\"contacts__loading\">\n      <div className=\"contacts__loader\">{reactIcon}</div>\n    </div>\n    :\n    null\n  )\n}","import React from 'react';\nimport './Profile.css';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading, selectUser } from '../features/reduxSlices/userSlice';\nimport { selectPreparedContacts } from '../features/reduxSlices/filterSlice';\nimport { useHistory } from 'react-router-dom';\nimport { Loading } from './contacts/Loading';\n\nexport const Profile = ({ match: { params } }) => {\n  const history = useHistory();\n  let user = useSelector(selectUser);\n  const contacts = useSelector(selectPreparedContacts);\n  const isContact = params.hasOwnProperty('contactId');\n  const isLoading = useSelector(selectIsLoading);\n\n  if (isContact && (params.contactId !== 'myContacts')) {\n    user = contacts?.find(({ login }) => login.uuid === params.contactId)\n  }\n\n  return (\n      <>\n        <div className=\"profile\">\n          <h1 className=\"profile__title\">Profile</h1>\n          <div className=\"profile__wrapper\">\n            <img src={user?.picture?.large} alt=\"user\" className=\"profile__foto\"/>\n            <div className=\"profile__text-area\">\n              <span className=\"profile__name\">\n                {`${user?.name.title}. ${user?.name.first} ${user?.name.last} (${user?.dob.age} years)`}\n              </span>\n              <span><a href={`mailto:${user?.email}`} className=\"profile__link\">{user?.email}</a></span>\n              <span><a href={`tel:${user?.phone}`} className=\"profile__link\">{user?.phone}</a></span>\n              <span>{`/${user?.location.country}/`}</span>\n              <span>{`${user?.location.postcode}, ${user?.location.state}, ${user?.location.street.name} ${user?.location.street.number}`}</span>\n              <span className=\"profile__nationality\">{user?.nat}</span>\n            </div>\n          </div>\n        </div>\n        {isContact && <button type=\"button\" className=\"profile__button\" onClick = {() => history.push('/contacts')}>Back to contacts</button>}\n        <Loading isVisible={isLoading} />\n      </>\n  )\n}\n","import React from 'react'\nimport { Header } from './header/Header';\nimport { selectIsUser } from '../features/reduxSlices/userSlice';\nimport { useSelector } from 'react-redux';\nimport { Contacts } from './contacts/Contacts';\nimport { Switch, Route } from 'react-router-dom';\nimport { Home } from './Home';\nimport { NotFound } from './404Page/NotFound';\nimport { Profile } from './Profile';\nimport { Loading } from './contacts/Loading';\nimport { selectIsLoading } from '../features/reduxSlices/contactsSlice';\n\nexport const Page = () => {\n  const isLogged = useSelector(selectIsUser);\n  const isLoading = useSelector(selectIsLoading);\n\n\n  return (\n      <>\n        <Header />\n          <section className=\"App__body\">\n            <Loading isVisible={isLoading} />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/myContacts\" component={Home} />\n              {isLogged && <Route exact path=\"/contacts\" component={Contacts} />}\n              {isLogged && <Route exact path=\"/profile\" component={Profile} />}\n              {isLogged && <Route exact path=\"/:contactId\" component={Profile} />}\n              <Route component={NotFound} />\n            </Switch>\n          </section>\n      </>\n  )\n};\n","import React from 'react';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport { Page } from './components/Page';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <Router>\r\n        <Page />\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}